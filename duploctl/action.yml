name: Duploctl
description: Run the duploctl command as an action
inputs:
  kind:
    description: Service type
    required: false 
  cmd: 
    description: Command to run
    required: false
  name:
    description: Service name
    required: true
  args:
    description: Image URI
    required: false
  query:
    description: The JMESPATH query to filter down the json result.
    required: false
  format:
    description: The output format for the result of the command
    required: false
  wait:
    description: The wait flag to hold while an action is completed.
    required: false
  show_summary:
    description: Shows the result of the command as a step summary. 
    required: false
    default: "false"
outputs:
  result:
    description: The result of the command
    value: ${{ steps.duploctl-exec.outputs.result }}
  command:
    description: The command that was run
    value: ${{ steps.duploctl-command.outputs.run }}
runs:
  using: composite
  steps:

  - name: Build Duploctl Command
    id: duploctl-command
    shell: bash
    env:
      KIND: ${{ inputs.kind }}
      NAME: ${{ inputs.name }}
      CMD: ${{ inputs.cmd }}
      ARGS: ${{ inputs.args }}
      QUERY: ${{ inputs.query }}
      FORMAT: ${{ inputs.format }}
      WAIT: ${{ inputs.wait }}
    run: |
      # build the duploctl arguments
      DUPLOCTL=(duploctl $KIND $CMD)

      # always comes right after the command
      if [ -n "$NAME" ]; then
        DUPLOCTL+=("$NAME")
      fi
      # other than name, these are specific to each command and come directly after name
      if [ -n "$ARGS" ]; then
        DUPLOCTL+=($ARGS)
      fi
      # the rest are optional and can be in any order
      if [ -n "$QUERY" ]; then
        DUPLOCTL+=("--query" "$QUERY")
      fi
      if [ -n "$FORMAT" ]; then
        DUPLOCTL+=("--output" "$FORMAT")
      fi
      if [ -n "$WAIT" ]; then
        DUPLOCTL+=("--wait")
      fi
      echo "run=${DUPLOCTL[@]}" >> $GITHUB_OUTPUT

  - name: Preview Command
    id: duploctl-preview
    shell: bash
    run: >
      echo 'Running: ${{ steps.duploctl-command.outputs.run }}'

  - name: Execute Duploctl Command
    id: duploctl-exec
    shell: bash
    env:
      DUPLOCTL: ${{ steps.duploctl-command.outputs.run }}
    run: |
      RESULT=$($DUPLOCTL)
      echo "$RESULT"
      echo "result=$RESULT" >> $GITHUB_OUTPUT

  - name: Show Summary
    id: duploctl-summary
    if: ${{ inputs.show_summary == 'true' }}
    shell: bash
    env:
      COMMAND: ${{ steps.duploctl-command.outputs.run }}
      FORMAT: ${{ inputs.format || 'json' }}
      RESULT: ${{ steps.duploctl-exec.outputs.result }}
    run: |
      cat <<EOF >> $GITHUB_STEP_SUMMARY
      # Duploctl  
      ## Command  
      \`\`\`sh  
      $COMMAND  
      \`\`\`
      ## Result  
      \`\`\`$FORMAT  
      $RESULT  
      \`\`\`  
      EOF
