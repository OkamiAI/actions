name: Install TF Dependencies
description: Install Terraform dependencies
inputs:
  tflint_file:
    description: TFLint config file
    required: false 
    default: .tflint.hcl
  tflint_version:
    description: TFLint version
    required: false 
    default: v0.44.1
  terraform_version:
    description: Terraform version
    required: false 
    default: 1.6.1
  tf_data_dir:
    description: Module directory
    required: false 
    default: .terraform
  tf_cache_dir:
    description: Terraform cache directory
    required: false 
    default: ~/.terraform.d/plugin-cache
  tflint_cache_dir:
    description: TFLint cache directory
    required: false 
    default: ~/.tflint.d/plugins
runs:
  using: composite
  steps:

  - name: Setup
    id: setup
    shell: bash
    env:
      PREFIX: duplo-tfstate
      TF_MODULES: ${{ inputs.module_dir }}
      TF_DATA_DIR: ${{ inputs.tf_data_dir }}
      TF_PLUGIN_CACHE_DIR: ${{ inputs.tf_cache_dir }}
      LINT_ENABLED: 'false'
      TFLINT_FILE: ${{ inputs.tflint_file }}
      TFRC: ~/.terraformrc
    run: |
      TF_DATA_DIR=$(realpath $TF_DATA_DIR)
      echo "DUPLO_TF_BUCKET=${PREFIX}-${DEFAULT_AWS_ACCOUNT_ID}" >> $GITHUB_ENV
      echo "DUPLO_TF_DYNAMO=${PREFIX}-${DEFAULT_AWS_ACCOUNT_ID}-lock" >> $GITHUB_ENV
      echo "TF_IN_AUTOMATION=true" >> $GITHUB_ENV
      echo "TF_MODULES=$TF_MODULES" >> $GITHUB_ENV
      echo "TF_DATA_DIR=$TF_DATA_DIR" >> $GITHUB_ENV

      # # setup terraform rc for cache dir
      # mkdir -p "${TF_PLUGIN_CACHE_DIR}"
      # echo "plugin_cache_dir = \"${TF_PLUGIN_CACHE_DIR}\"" > $TFRC
      # echo "TF_PLUGIN_CACHE_DIR=${TF_PLUGIN_CACHE_DIR}" >> $GITHUB_ENV

      # check if .tflint.hcl file exists
      if [ -f "$TFLINT_FILE" ]; then
        echo "TFLint config file found"
        echo "TFLINT_FILE=$(realpath $TFLINT_FILE)" >> $GITHUB_ENV
      else
        LINT_ENABLED="false"
      fi
      echo "LINT_ENABLED=$LINT_ENABLED" >> $GITHUB_ENV


  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v2
    with:
      terraform_version: ${{ inputs.terraform_version }}
      
  - name: Setup TFLint
    uses: terraform-linters/setup-tflint@v3
    if: env.LINT_ENABLED == 'true'
    with:
      tflint_version: ${{ inputs.tflint_version }}

  - name: Cache TFlint Plugins
    uses: actions/cache@v3
    if: env.LINT_ENABLED == 'true'
    with:
      path: ${{ inputs.tflint_cache_dir }}
      key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

  - name: Cache TF Data
    id: plugin-cache
    uses: actions/cache@v3
    with:
      path: ${{ env.TF_DATA_DIR }}
      key: tfdata-${{ hashFiles('**/.terraform.lock.hcl') }}

  # - name: Cache TF Plugins
  #   uses: actions/cache@v3
  #   with:
  #     path: ${{ inputs.tf_cache_dir }}
  #     key: plugins-${{ matrix.module }}-${{ hashFiles(env.TF_LOCKFILE) }}
