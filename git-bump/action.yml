name: Duplo AWS Setup
description: Install Duplo and AWS tools and login.
inputs:
  action:
    description: 'The action to perform: patch, minor, major'
    required: true
    default: 'patch'
  push:
    description: 'Push the new tag to the remote'
    required: false
    default: 'false'
runs:
  using: composite
  steps:

  - name: Bump Version
    shell: bash
    env:
      ACTION: ${{ inputs.action }}
    run: |
      echo "Bumping version"

      # get highest tag number, and add 1.0.0 if doesn't exist
      CURRENT_VERSION=`git describe --abbrev=0 --tags 2>/dev/null`

      if [[ $CURRENT_VERSION == '' ]]
      then
        CURRENT_VERSION='0.0.1'
      fi
      echo "Current Version: $CURRENT_VERSION"

      # replace . with space so can split into an array
      CURRENT_VERSION_PARTS=(${CURRENT_VERSION//./ })

      #get number parts
      VNUM1=${CURRENT_VERSION_PARTS[0]//[!0-9]/}
      VNUM2=${CURRENT_VERSION_PARTS[1]}
      VNUM3=${CURRENT_VERSION_PARTS[2]}

      if [[ $ACTION == 'major' ]]
      then
        VNUM1=$((VNUM1+1))
        VNUM2=0
        VNUM3=0
      elif [[ $ACTION == 'minor' ]]
      then
        VNUM2=$((VNUM2+1))
        VNUM3=0
      elif [[ $ACTION == 'patch' ]]
      then
        VNUM3=$((VNUM3+1))
      else
        echo "No version type (https://semver.org/) or incorrect type specified, try: -v [major, minor, patch]"
        exit 1
      fi

      # create new tag
      NEW_TAG="v$VNUM1.$VNUM2.$VNUM3"
      echo "($ACTION) updating $CURRENT_VERSION to $NEW_TAG"

      git rev-parse HEAD
      # get current hash and see if it already has a tag
      GIT_COMMIT=`git rev-parse HEAD`
      git describe --contains $GIT_COMMIT
      NEEDS_TAG=`git describe --contains $GIT_COMMIT 2>/dev/null`

      # only tag if no tag already
      if [ -z "$NEEDS_TAG" ]; then
        git tag $NEW_TAG
      else
        echo "Already a tag on this commit"
      fi

  - name: Push tag
    if: ${{ inputs.push == 'true' }}
    shell: bash
    run: |
      echo "Pushing tag"
      git push --tags
