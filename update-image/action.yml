name: Update Service
description: Updates an image for a number of container types. 
inputs:
  type:
    description: Service type
    required: false 
    default: service
  name:
    description: Service name
    required: true
  image:
    description: Image URI
    required: true
  wait:
    description: Wait for deployment
    required: false
    default: "false"

runs:
  using: composite
  steps:

  - name: Verify Type
    id: verify-type
    shell: bash
    if: '!contains(fromJSON(''["service", "ecs", "lambda", "cronjob"]''), inputs.type)'
    run: |
      echo "Invalid Type: ${{ inputs.type }}"
      echo "Valid commands: service, ecs, lambda, cronjob"
      exit 1

  - name: Update Image
    id: duploctl
    shell: bash
    env:
      RESOURCE: ${{ inputs.type }}
      NAME: ${{ inputs.name }}
      IMAGE: ${{ inputs.image }}
    run: |
      if [[ "${{ inputs.wait }}" == "true" ]]; then
        duploctl $RESOURCE update_image $NAME $IMAGE --wait
      else
        duploctl $RESOURCE update_image $NAME $IMAGE
      fi
