name: Validate Module
description: Test a single Terraform module
inputs:
  module: 
    description: Working directory
    required: true
  lint:
    description: Lint the module
    required: false
    default: "true"
  validate:
    description: Validate the module
    required: false
    default: "true"
  fmt:
    description: Format the module
    required: false
    default: "true"
  test:
    description: Test the module
    required: false
    default: "true"
runs:
  using: composite
  steps:

  - name: Setup
    id: setup
    shell: bash
    working-directory: ${{ inputs.module }}
    env:
      WKDIR: ${{ inputs.module }}
    run: |
      MODULE=$(basename $WKDIR)
      echo "module=$MODULE" >> $GITHUB_OUTPUT

  # - name: Cache Modules
  #   id: plugin-cache
  #   uses: actions/cache@v3
  #   working-directory: ${{ inputs.module }}
  #   with:
  #     path: ${{ env.TF_DATA_DIR }}
  #     key: ${{ steps.setup.outputs.module }}-${{ hashFiles(.terraform.lock.hcl) }}

  - name: TF Init Module
    id: init
    shell: bash
    working-directory: ${{ inputs.module }}
    run: terraform init

  - name: Init TFLint
    id: lint-init
    shell: bash
    if: >
      inputs.test == 'true' &&
      env.LINT_ENABLED == 'true'
    working-directory: ${{ inputs.module }}
    run: tflint --init -c $TFLINT_FILE

  - name: Run TFLint
    id: lint
    if: >
      inputs.test == 'true' &&
      env.LINT_ENABLED == 'true'
    shell: bash
    working-directory: ${{ inputs.module }}
    run: tflint -c $TFLINT_FILE

  - name: TF Validate Module
    id: validate
    if: inputs.validate == 'true'
    shell: bash
    working-directory: ${{ inputs.module }}
    run: terraform validate

  - name: Validate Format
    id: fmt
    if: inputs.fmt == 'true'
    shell: bash
    working-directory: ${{ inputs.module }}
    run: terraform fmt -check=true -diff=true -recursive

  - name: Test Module
    id: test
    if: inputs.test == 'true'
    working-directory: ${{ inputs.module }}
    shell: bash
    run: terraform test
    env:
      duplo_token: ${{ env.DUPLO_TOKEN }}
      duplo_host: ${{ env.DUPLO_HOST }}
